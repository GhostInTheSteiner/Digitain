{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/ts/Code/Controller.ts","source/ts/Code/View/Classes/RainCharacter.ts","source/ts/Code/View/Classes/RainString.ts","source/ts/Code/View/Classes/RainView.ts","source/ts/Code/View/View.ts","source/ts/Main.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","digitalRain","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","View_1","Controller","view","default","StartAnimation","RainCharacter","character","lifeTimeCycles","fadeOutLevel","_visible","_opacity","Object","defineProperty","prototype","v","console","log","_blurStrength","GetNextState","updateObject","toHtmlElement","htmlSpanElement","document","createElement","classList","add","textContent","style","textShadow","opacity","toString","visibility","Visible","RainCharacter_1","RainString","stringText","stringDelayStart","stringDelayUpdate","stringDelayUpdateDynamic","characterBlurredCount","characterBlurredStrength","characterFadeCount","characterFadeBegin","rainCharacterArray","Array","currentCharacterIndex","timeUpdateLast","Date","getTime","timeInit","fillString","timeCurrent","htmlDivElement","toHtmlDivElement","hasChildNodes","blurDrop","showNextCharacter","forEach","rainCharacter","appendChild","_this","from","stringChar","push","level","sliceStartIndex","slice","reverse","index","BlurStrength","RainString_1","RainView","stringTextArray","stringDelayStartVariation","rainStringArray","fillView","AddStringArray","textArray","AddString","text","rainString","Math","random","RainView_1","View","rainView","setInterval","updateAnimation","bind","rainViewDiv","getElementById","innerHTML","Controller_1"],"mappings":"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","file":"digital-rain.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import View from \"./View/View\";\nimport Model from \"./Model\";\n\nclass Controller\n{\n    private view: View\n\n    constructor(\n        //private model: Model\n    )\n    {\n        this.view = new View();\n        this.view.StartAnimation();\n    }\n}\n\nexport default Controller","export default class RainCharacter implements IUpdatableHtmlElement\n{\n    private _visible: boolean;\n    private _opacity: number;\n    private _blurStrength: Number;\n\n\n    constructor(\n        private character: string,\n        private lifeTimeCycles: number = 30,\n        private fadeOutLevel: number = 0.1\n    )\n    {\n        this._visible = false;\n        this._opacity = 1.0\n    }\n\n\n    public get Visible(): boolean\n    {\n        return this._visible;\n    }\n\n    public set Visible(v: boolean)\n    {\n        this._visible = v;\n    }\n\n    public get Opacity(): number\n    {\n        return this._opacity;\n    }\n\n    public set Opacity(v: number)\n    {\n        this._opacity = v;\n        console.log(this._opacity)\n    }\n\n    public get BlurStrength(): Number\n    {\n        return this._blurStrength;\n    }\n\n    public set BlurStrength(v: Number)\n    {\n        this._blurStrength = v;\n    }\n\n    public GetNextState(): HTMLSpanElement\n    {\n        this.updateObject();\n\n        return this.toHtmlElement();\n    }\n\n    private updateObject(): boolean\n    {\n        if (!this._visible)\n        {\n            //4) Entered always after fade out complete\n            return false\n        }\n        else if(this._opacity < 0.1)\n        {\n            //3) Entered once after fade out complete\n            this._visible = false\n            return true\n        }\n        else if (this.lifeTimeCycles < 1)\n        {\n            //2) Entered after no lifetime left\n            this._opacity -= this.fadeOutLevel;\n            return true\n        }\n        else if (this._visible)\n        {\n            //1) Entered after set to visible\n            this.lifeTimeCycles--;\n            return true\n        }\n    }\n\n    private toHtmlElement(): HTMLSpanElement\n    {\n        let htmlSpanElement: HTMLSpanElement = document.createElement(\"span\");\n\n        htmlSpanElement.classList.add(\"rain-character\")\n        htmlSpanElement.textContent = this.character\n\n        htmlSpanElement.style.textShadow = \"0px 0px \" + this._blurStrength + \"px green\"\n        htmlSpanElement.style.opacity = this._opacity.toString();\n        htmlSpanElement.style.visibility =\n            this.Visible ?\n                \"visible\" :\n                \"hidden\"\n\n        return htmlSpanElement;\n    }\n}","import RainCharacter from \"./RainCharacter\";\n\nexport default class RainString implements IUpdatableHtmlElement\n{\n    private rainCharacterArray: Array<RainCharacter>;\n    private currentCharacterIndex: number\n    private timeUpdateLast: number;\n    private timeInit: number;\n\n\n    constructor(\n        private stringText: string,\n        private stringDelayStart: number,\n        private stringDelayUpdate: number,\n        private stringDelayUpdateDynamic: boolean, //Adjust updateDelay to text length\n        private characterBlurredCount: number,\n        private characterBlurredStrength: number,\n        private characterFadeCount: number,\n        private characterFadeBegin: number\n    )\n    {\n        this.rainCharacterArray = new Array<RainCharacter>();\n        this.currentCharacterIndex = 0;\n        this.timeUpdateLast = new Date().getTime();\n        this.timeInit = this.timeUpdateLast;\n\n        this.fillString();\n    }\n\n\n    public GetNextState(): HTMLDivElement\n    {\n        let timeCurrent = new Date().getTime();\n\n        if (timeCurrent - this.timeInit < this.stringDelayStart)\n        {\n            //Entered during delayStart time\n            //pass => shouldn't start yet\n        }\n        else if (timeCurrent - this.timeUpdateLast < this.stringDelayUpdate)\n        {\n            //Entered as long as updateDelay not yet reached\n            //pass => shouldn't update yet\n        }\n        else if (!this.updateObject())\n        {\n            //Entered in case all of RainString's characters are shown\n\n            //console.log(\"INFO:\\n\\nCode: 'Fall finished.'\\nDescription: 'No more characters to show for RainString:'\\n\");\n            //console.log(this);\n        }\n        else\n        {\n            //Entered after successfull render (rarely)\n\n            let htmlDivElement: HTMLDivElement = this.toHtmlDivElement();\n\n            if (!htmlDivElement.hasChildNodes())\n            {\n              //  console.log(\"WARN:\\n\\nCode: 'No drop.'\\nDescription: 'No RainCharacter in RainString:'\\n\");\n                //console.log(this);\n            }\n\n            this.timeUpdateLast = timeCurrent;\n\n            return htmlDivElement;\n        }\n\n        //Returned whenever no render took place (almost always)\n        return this.toHtmlDivElement()\n    }\n\n    private updateObject(): boolean\n    {\n        this.blurDrop();\n\n        return this.showNextCharacter();\n    }\n\n    private toHtmlDivElement(): HTMLDivElement\n    {\n        let htmlDivElement: HTMLDivElement = document.createElement(\"div\");\n\n        htmlDivElement.classList.add(\"rain-string\")\n\n        this.rainCharacterArray.forEach(rainCharacter =>\n        {\n            htmlDivElement.appendChild(\n                rainCharacter.GetNextState()\n            )\n        })\n\n        return htmlDivElement;\n    }\n\n    private fillString(): void\n    {\n        Array\n            .from(this.stringText)\n            .forEach(stringChar =>\n            {\n                this.rainCharacterArray.push(new RainCharacter(stringChar));\n            });\n    }\n\n    private showNextCharacter(): boolean\n    {\n        if (this.rainCharacterArray.length > this.currentCharacterIndex)\n        {\n            //There still are more characters\n            this.rainCharacterArray[this.currentCharacterIndex].Visible = true;\n\n            this.currentCharacterIndex++;\n\n            return true;\n        }\n        else\n        {\n            //No more characters\n            return false;\n        }\n    }\n\n    private blurDrop(): void\n    {\n        let level: number =\n            this.characterBlurredStrength / this.characterBlurredCount;\n\n        let sliceStartIndex: number =\n            this.currentCharacterIndex - this.characterBlurredCount > -1 ?\n                this.currentCharacterIndex - this.characterBlurredCount :\n                0\n\n\n        this.rainCharacterArray\n            .slice(\n                sliceStartIndex,\n                this.currentCharacterIndex\n            )\n            .reverse()\n            .forEach(\n                (rainCharacter, index) =>\n                {\n                    rainCharacter.BlurStrength =\n                        level * (this.characterBlurredCount - index);\n                }\n            )\n    }\n}","import RainString from \"./RainString\";\n\nexport default class RainView implements IUpdatableHtmlElement\n{\n    private rainStringArray: Array<RainString>;\n\n\n    constructor(\n        private stringTextArray: Array<string>,\n        private characterBlurredCount: number = 1,\n        private characterBlurredStrength: number = 5,\n        private characterFadeCount: number = 10,\n        private characterFadeBegin: number = 10,\n        private stringDelayStartVariation: number = 10000,\n        private stringDelayUpdate: number = 100,\n        private stringDelayUpdateDynamic: boolean = true\n    )\n    {\n        this.rainStringArray = new Array<RainString>();\n\n        this.fillView();\n    }\n    \n\n    public AddStringArray(textArray: Array<string>)\n    {\n        //dynamically add string array\n    }\n\n    public AddString(text: string)\n    {\n        //dynamically add string\n    }\n\n    public GetNextState(): HTMLDivElement\n    {\n        return this.toHtmlElement()\n    }\n\n    private toHtmlElement(): HTMLDivElement\n    {\n        let htmlDivElement: HTMLDivElement = document.createElement(\"div\");\n\n        htmlDivElement.classList.add(\"rain-view\")\n\n        this.rainStringArray.forEach(rainString =>\n        {\n            htmlDivElement.appendChild(\n                rainString.GetNextState()\n            )\n        })\n\n        return htmlDivElement;\n    }\n\n    private fillView(): void\n    {\n        this.stringTextArray.forEach(stringText =>\n        {\n            this.rainStringArray.push(\n                new RainString(\n                    stringText,\n                    Math.random() * this.stringDelayStartVariation,\n                    this.stringDelayUpdate * (Math.random() + 0.5),\n                    this.stringDelayUpdateDynamic,\n                    this.characterBlurredCount,\n                    this.characterBlurredStrength,\n                    this.characterFadeCount,\n                    this.characterFadeBegin\n                )\n            )\n        });\n    }\n}","import RainView from \"./Classes/RainView\";\n\nexport default class View\n{\n    private rainView: RainView;\n\n    constructor()\n    {\n        this.rainView =\n            new RainView(\n                [\n                    \"rfeigbergbe\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                    , \"grhrjztjtztjtzjtzjtzjtzjtzgrergse\"\n                    , \"segegdgrehtrhzrjtzjztjtz\"\n                    , \"ergzjtzjtzjtzjegerggrerregere\"\n                ]\n            );\n    }\n\n    public StartAnimation(): void\n    {\n        setInterval(\n            this.updateAnimation.bind(this)\n        )\n    }\n\n    private updateAnimation(): void\n    {\n        let rainViewDiv = document.getElementById(\"rain-view\");\n\n        rainViewDiv.innerHTML = \"\";\n\n        rainViewDiv.appendChild(\n            this.rainView.GetNextState()\n        );\n    }\n}","import Controller from \"./Code/Controller\";\n\nlet controller = new Controller();"]}